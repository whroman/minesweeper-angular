var __hasProp={}.hasOwnProperty,__extends=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)__hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child};angular.module("CollectTiles",["ModelTile"]).factory("CollectTiles",function(ModelTile){var CollectTiles;return CollectTiles=function(){function CollectTiles(widthOrSavedGame,height,numOfMines){var Model,collection,tile,_i,_len,_ref;if(collection=this,this.model=Model=function(_super){function Model(){return Model.__super__.constructor.apply(this,arguments)}return __extends(Model,_super),Model.prototype.clear=function(){return Model.__super__.clear.call(this),collection.clearNeighbors(this)},Model}(ModelTile),Array.isArray(widthOrSavedGame))for(this.loadGame(widthOrSavedGame),this.x=Math.max.apply(this,this.all.map(function(tile){return tile.model.x})),this.y=Math.max.apply(this,this.all.map(function(tile){return tile.model.y})),this.x=this.x--,this.y=this.y--,this.numOfMines=0,_ref=this.all,_i=0,_len=_ref.length;_len>_i;_i++)tile=_ref[_i],tile.model.isMine===!0&&this.numOfMines++;else this.newGame(widthOrSavedGame,height,numOfMines),this.x=widthOrSavedGame,this.y=height,this.numOfMines=numOfMines;this.update()}return CollectTiles.prototype.add=function(model){var tile;return tile=new this.model(model),this.all.push(tile),tile},CollectTiles.prototype.update=function(){var tile,_i,_len,_ref;for(this.loss=!1,this.win=!1,this.numOfClears=0,this.numOfFlags=0,_ref=this.all,_i=0,_len=_ref.length;_len>_i;_i++)tile=_ref[_i],tile.model.isClear===!0&&this.numOfClears++,tile.model.isFlagged===!0&&this.numOfFlags++,tile.model.isMine===!0&&tile.model.isClear===!0&&(this.loss=!0);return this.loss===!1&&this.all.length-this.numOfMines-this.numOfClears===0?this.win=!0:void 0},CollectTiles.prototype.get=function(attrs){return this.getAll(attrs)[0]},CollectTiles.prototype.getAll=function(attrs){var key,matches,numOfAttrs,numOfMatchedAttrs,tile,val,_i,_j,_len,_len1,_ref,_ref1;if(matches=[],void 0===attrs)for(_ref=this.all,_i=0,_len=_ref.length;_len>_i;_i++)tile=_ref[_i],matches.push(tile);else for(_ref1=this.all,_j=0,_len1=_ref1.length;_len1>_j;_j++){tile=_ref1[_j],numOfAttrs=0,numOfMatchedAttrs=0;for(key in attrs)val=attrs[key],numOfAttrs++,tile.model[key]===val&&numOfMatchedAttrs++;numOfMatchedAttrs===numOfAttrs&&matches.push(tile)}return matches},CollectTiles.prototype.tallyMines=function(){var adjacentTile,neighborAttrs,neighborMine,neighborMines,neighborX,neighborY,tile,_i,_j,_len,_len1,_ref,_ref1;for(_ref=this.getAll(),_i=0,_len=_ref.length;_len>_i;_i++){for(tile=_ref[_i],neighborMines=0,_ref1=tile.adjacentTiles,_j=0,_len1=_ref1.length;_len1>_j;_j++)adjacentTile=_ref1[_j],neighborX=tile.model.x+adjacentTile[0],neighborY=tile.model.y+adjacentTile[1],neighborAttrs={isMine:!0,x:neighborX,y:neighborY},neighborMine=this.get(neighborAttrs),void 0!==neighborMine&&neighborMines++;tile.model.adjacentMines=neighborMines}return this},CollectTiles.prototype.randomSafeTile=function(){var findAttrs,randomIndex,safeTiles;return findAttrs={isClear:!1,isMine:!1},safeTiles=this.getAll(findAttrs),randomIndex=Math.floor(Math.random()*safeTiles.length),safeTiles[randomIndex]},CollectTiles.prototype.autoSelect=function(num){for(;num--;)this.randomSafeTile().clear();return this.all},CollectTiles.prototype.newGame=function(sizeX,sizeY,numOfMines){var attrs,mineNum,tile,x,y,_i,_j,_k,_ref,_ref1;for(this.reset(),y=_i=0,_ref=sizeY-1;_ref>=0?_ref>=_i:_i>=_ref;y=_ref>=0?++_i:--_i)for(x=_j=0,_ref1=sizeX-1;_ref1>=0?_ref1>=_j:_j>=_ref1;x=_ref1>=0?++_j:--_j)attrs={x:x,y:y},this.add(attrs);for(mineNum=_k=1;numOfMines>=1?numOfMines>=_k:_k>=numOfMines;mineNum=numOfMines>=1?++_k:--_k)tile=this.randomSafeTile(),tile.model.isMine=!0;return this.tallyMines()},CollectTiles.prototype.loadGame=function(savedTiles){var tile,_i,_len;for(this.reset(),_i=0,_len=savedTiles.length;_len>_i;_i++)tile=savedTiles[_i],this.add(tile.model);return this},CollectTiles.prototype.reset=function(){return this.all=[],this},CollectTiles.prototype.clearNeighbors=function(tile){var adjacentTile,neighbor,shouldClearNeighbor,shouldClearNeighbors,_i,_len,_ref;if(shouldClearNeighbors=0===tile.model.adjacentMines&&tile.model.isMine===!1)for(_ref=tile.adjacentTiles,_i=0,_len=_ref.length;_len>_i;_i++)adjacentTile=_ref[_i],neighbor=this.get({x:tile.model.x+adjacentTile[0],y:tile.model.y+adjacentTile[1]}),shouldClearNeighbor=neighbor&&neighbor.model.isClear===!1&&neighbor.model.isMine===!1,shouldClearNeighbor&&neighbor.clear();return this},CollectTiles}()});
//# sourceMappingURL=data:application/json;base64,